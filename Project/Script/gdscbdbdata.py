# Filename: extract_losses.py

import re
"""
def extract_losses(file_path):
    losses = []
    pattern = r"Training at Epoch (\d+) iteration 0 with loss ([\d\.]+)\.?\sTotal time ([\d\.]+) hours"
    
    with open(file_path, 'r') as file:
        for line in file:
            match = re.search(pattern, line)
            if match:
                epoch = int(match.group(1))
                loss = float(match.group(2).strip('.'))  # Remove any trailing period and convert to float
                losses.append((epoch, loss))
    
    return losses

def main():
    file_path = '/Users/efepekgoz/Project/csv_files/gdscres.txt'
    losses = extract_losses(file_path)
    
    for loss_info in losses:
        print(f"Epoch: {loss_info[0]}, Loss: {loss_info[1]}")

if __name__ == "__main__":
    main()
"""

import matplotlib.pyplot as plt

def plot_training_and_validation_losses(epochs, training_losses, validation_losses):
    plt.figure(figsize=(10, 6)) 

    plt.plot(epochs, training_losses, linestyle='-', color='blue', label='Training Loss')
    plt.plot(epochs, validation_losses, linestyle='-', color='orange', label='Validation Loss')
    
    plt.xlabel('Epoch')
    plt.ylabel('Loss')
    plt.title('Training and Validation Loss per Epoch')
    plt.ylim(0, 2)
    plt.grid(True)
    plt.legend()
    plt.show()

# Example data
epochs = list(range(1, 101))
#new
training_losses = [
    63.5984, 0.88743, 0.62295, 0.68483, 0.53059, 0.64648, 0.42598, 0.57847, 0.47039, 0.42477,
    0.50323, 0.4903, 0.39741, 0.46557, 0.55317, 0.56107, 0.44565, 0.51933, 0.39557, 0.651,
    0.47809, 0.4947, 0.50082, 0.51524, 0.53796, 0.58568, 0.45481, 0.45057, 0.63887, 0.43956,
    0.4562, 0.50657, 0.43708, 0.46688, 0.49118, 0.4132, 0.44947, 0.594, 0.44652, 0.4515,
    0.35919, 0.40788, 0.48124, 0.46302, 0.41365, 0.48236, 0.38308, 0.36089, 0.47623, 0.46419,
    0.44362, 0.46553, 0.41914, 0.49922, 0.63856, 0.43445, 0.44421, 0.33447, 0.47082, 0.32824,
    0.47256, 0.48595, 0.48486, 0.51231, 0.40339, 0.40218, 0.48387, 0.39453, 0.42776, 0.35727,
    0.49095, 0.31697, 0.31944, 0.40962, 0.53196, 0.56605, 0.43834, 0.3509, 0.40284, 0.4365,
    0.38905, 0.34715, 0.40954, 0.61273, 0.39078, 0.39273, 0.4101, 0.41842, 0.51272, 0.40583,
    0.46159, 0.44291, 0.40863, 0.40485, 0.35137, 0.41237, 0.54725, 0.42734, 0.62564, 0.42896
]

"""
# Training losses (previously provided data)
training_losses = [
    51.2, 1.27781, 1.12309, 1.09625, 1.25809, 1.10318, 0.7518, 1.00035, 0.96092, 1.01093,
    0.96859, 0.71649, 0.86178, 1.00216, 0.80082, 0.88462, 0.73983, 1.0025, 0.77062, 0.60981,
    0.92583, 0.77807, 0.65834, 0.71153, 0.90296, 0.93351, 0.74488, 0.70385, 0.96684, 0.70618,
    0.68383, 0.87533, 0.94134, 0.82598, 0.855, 0.88158, 0.87049, 0.67398, 0.74718, 0.61714,
    0.76177, 0.79033, 0.8873, 0.82504, 0.74969, 0.49269, 0.77781, 0.60085, 0.61502, 0.62932,
    0.63898, 0.70952, 0.86459, 0.73959, 0.65177, 0.68083, 0.61478, 0.62903, 0.5936, 0.68941,
    0.69989, 0.54288, 0.71967, 0.58942, 0.54586, 0.5728, 0.67334, 0.79807, 0.62992, 0.71592,
    0.50961, 0.88063, 0.6918, 0.53398, 0.69953, 0.88356, 0.70799, 0.58921, 0.67617, 0.75082,
    0.58266, 0.59915, 0.59455, 0.57416, 0.5719, 0.74131, 0.38313, 0.4965, 0.47937, 0.80159,
    0.71022, 0.5864, 0.52418, 0.53821, 0.67269, 0.47483, 0.57495, 0.49302, 0.59153, 0.5708
]
"""
#new
validation_losses = [
    0.84375, 0.53611, 0.84907, 0.40136, 0.49906, 0.56249, 0.93527, 0.27678, 0.44407, 0.49891,
    0.29907, 0.71828, 0.51554, 0.47714, 0.35818, 0.42682, 0.27507, 0.44797, 0.29704, 0.31194,
    0.38161, 0.35824, 0.32635, 0.22171, 0.29563, 0.37732, 0.35836, 0.42224, 0.32421, 0.36898,
    0.63563, 0.25393, 0.38155, 0.4333, 0.44953, 0.43599, 0.52576, 0.43479, 0.40631, 0.3273,
    0.56712, 0.39485, 0.31099, 0.83635, 0.33605, 0.35546, 0.60701, 0.30647, 0.35219, 0.32545,
    0.46362, 0.61201, 0.4827, 0.42507, 0.6079, 0.57615, 0.19736, 0.35497, 0.48639, 0.59428,
    0.5094, 0.33188, 0.33319, 0.5218, 0.30004, 0.59096, 0.5157, 0.38061, 0.3311, 0.34547,
    0.66418, 0.3564, 0.4316, 0.35333, 0.28471, 0.55988, 0.42398, 0.4401, 0.37571, 0.53982,
    0.20268, 0.39946, 0.28911, 0.32318, 0.31836, 0.31716, 0.70934, 0.64096, 0.60483, 0.51406,
    0.17747, 0.30312, 0.2496, 0.71751, 0.37574, 0.37686, 0.43262, 0.26764, 0.39643, 0.56766
]


"""
# Validation losses (newly provided data)
validation_losses = [
    1.99137, 1.31604, 0.7605, 1.09074, 1.02539, 1.01806, 0.77052, 1.24782, 0.54204, 1.3339,
    0.98539, 1.05826, 0.99843, 0.65962, 1.03318, 1.00335, 0.91603, 0.8092, 1.15304, 0.79321,
    0.89732, 0.69684, 0.92851, 0.79695, 0.81879, 0.70899, 0.79277, 0.83307, 0.63716, 0.63532,
    0.81873, 0.85112, 0.85236, 0.69948, 1.1479, 0.67241, 0.72841, 1.08533, 0.77563, 0.55186,
    1.34566, 0.55807, 0.78105, 0.46721, 1.18312, 0.73824, 0.85341, 0.99044, 0.57773, 0.76832,
    1.03485, 0.79766, 0.4957, 0.86424, 1.11307, 0.94997, 0.8701, 0.92573, 0.81128, 0.60611,
    0.67626, 1.09207, 0.4987, 0.67283, 1.06609, 1.22873, 0.82615, 0.6966, 0.67755, 0.62496,
    0.80659, 0.68199, 1.02461, 0.93791, 0.63944, 1.01472, 0.51438, 0.41847, 0.87281, 1.04208,
    0.70828, 0.69766, 0.78393, 0.84371, 0.81062, 0.86526, 0.71402, 0.96544, 0.45935, 0.73248,
    1.33419, 0.40058, 0.57369, 0.86725, 0.69819, 0.6618, 0.49502, 0.92838, 0.88275, 0.59034
]
"""
plot_training_and_validation_losses(epochs, training_losses, validation_losses)

"""
def extract_validation_losses(file_path):
    validation_losses = []
    pattern = r"Validation at Epoch (\d+) with loss:([\d\.]+),"
    
    with open(file_path, 'r') as file:
        for line in file:
            match = re.search(pattern, line)
            if match:
                epoch = int(match.group(1))
                loss = float(match.group(2))
                validation_losses.append((epoch, loss))
    
    return validation_losses

def main():
    file_path = '/Users/efepekgoz/Project/csv_files/gdscres.txt'
    
    validation_losses = extract_validation_losses(file_path)
    
    for val_info in validation_losses:
        print(f"Epoch: {val_info[0]}, Validation Loss: {val_info[1]}")

if __name__ == "__main__":
    main()
"""